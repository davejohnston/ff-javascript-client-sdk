import z from"jwt-decode";import B from"mitt";import{EventSourcePolyfill as G}from"event-source-polyfill";var u;(function(a){a.READY="ready",a.CONNECTED="connected",a.DISCONNECTED="disconnected",a.RECONNECTED="reconnected",a.CHANGED="changed",a.ERROR="error"})(u||(u={}));var j={debug:!1,baseUrl:"https://config.feature-flags.uat.harness.io/api/1.0",eventUrl:"https://event.feature-flags.uat.harness.io/api/1.0",streamEnabled:!0,allAttributesPrivate:!1,privateAttributeNames:[]},h=(a,...s)=>console.error(`[FF-SDK] ${a}`,...s),w=30*1e3;var Y="1.3.0",q=500,A=globalThis.fetch,Q=G,p=!!globalThis.Proxy,N=a=>{let{value:s}=a;try{switch(a.kind.toLowerCase()){case"int":case"number":s=Number(s);break;case"boolean":s=s.toString().toLowerCase()==="true";break;case"json":s=JSON.parse(s);break}}catch(I){h(I)}return s},W=(a,s,I)=>{let R,T,b,S,y,m=!0,D=()=>{m=!1},F=()=>{m=!0},o=[],l=B(),E={...j,...I},f=(t,...e)=>{E.debug&&console.debug(`[FF-SDK] ${t}`,...e)},C=t=>{if(m){let e=Date.now();e-t.lastAccessed>q&&(t.count++,t.lastAccessed=e)}};globalThis.onbeforeunload=()=>{o.length&&globalThis.localStorage&&(D(),globalThis.localStorage.HARNESS_FF_METRICS=JSON.stringify(o),F())};let U=async(t,e)=>(await(await A(`${e.baseUrl}/client/auth`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({apiKey:t,target:s})})).json()).authToken,O=()=>{if(o.length){f("Sending metrics...",{metrics:o,evaluations:c});let t={metricsData:o.map(e=>({timestamp:Date.now(),count:e.count,metricsType:"FFMETRICS",attributes:[{key:"featureIdentifier",value:e.featureIdentifier},{key:"featureName",value:e.featureIdentifier},{key:"variationIdentifier",value:e.variationIdentifier},{key:"target",value:s.identifier},{key:"SDK_NAME",value:"JavaScript"},{key:"SDK_TYPE",value:"client"},{key:"SDK_VERSION",value:Y}]}))};A(`${I.eventUrl}/metrics/${R}?cluster=${T}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${S}`},body:JSON.stringify(t)}).then(()=>{o=[]}).catch(e=>{h(e)}).finally(()=>{y=window.setTimeout(O,w)})}else y=window.setTimeout(O,w)},c={},$=function(){return p?new Proxy({},{get(t,e){let i=t[e];if(t.hasOwnProperty(e)){let d=t[e],n=o.find(r=>r.featureIdentifier===e&&d===r.featureValue);n?(n.variationIdentifier=c[e]?.identifier||"",C(n)):o.push({featureIdentifier:e,featureValue:d,variationIdentifier:c[e]?.identifier||"",count:m?1:0,lastAccessed:Date.now()}),f("Metrics event: Flag:",e,"has been read with value:",d,"variationIdentifier:",c[e]?.identifier)}return i}}):{}},g=$();U(a,E).then(t=>{S=t;let e=z(t);if(f("Authenticated",e),globalThis.localStorage&&globalThis.localStorage.HARNESS_FF_METRICS)try{delete globalThis.localStorage.HARNESS_FF_METRICS,f("Picking up metrics from previous session")}catch(i){}y=window.setTimeout(O,w),R=e.environment,T=e.clusterIdentifier,_().then(()=>{f("Fetch all flags ok",g)}).then(()=>{L()}).then(()=>{f("Event stream ready",{storage:g}),l.emit(u.READY,g),p||Object.keys(g).forEach(i=>{o.push({featureIdentifier:i,featureValue:g[i],variationIdentifier:c[i]?.identifier||"",count:m?1:0,lastAccessed:Date.now()})})}).catch(i=>{l.emit(u.ERROR,i)})}).catch(t=>{h("Authentication error: ",t),l.emit(u.ERROR,t)});let _=async()=>{try{(await(await A(`${E.baseUrl}/client/env/${R}/target/${s.identifier}/evaluations?cluster=${T}`,{headers:{Authorization:`Bearer ${S}`}})).json()).forEach(i=>{let d=N(i);g[i.flag]=d,c[i.flag]={...i,value:d}})}catch(t){return h("Features fetch operation error: ",t),l.emit(u.ERROR,t),t}},M=async t=>{try{let e=await A(`${E.baseUrl}/client/env/${R}/target/${s.identifier}/evaluations/${t}?cluster=${T}`,{headers:{Authorization:`Bearer ${S}`}});if(e.ok){let i=await e.json(),d=N(i);if(D(),g[t]=d,c[t]={...i,value:d},F(),l.emit(u.CHANGED,p?new Proxy(i,{get(n,r){if(n.hasOwnProperty(r)&&r==="value"){let v=n.flag,V=i.value,k=o.find(P=>P.featureIdentifier===v&&P.featureValue===V);k?(C(k),k.variationIdentifier=c[v]?.identifier||""):o.push({featureIdentifier:v,featureValue:String(V),variationIdentifier:c[v].identifier||"",count:m?1:0,lastAccessed:Date.now()}),f("Metrics event: Flag",r,"has been read with value via stream update",V)}return r==="value"?N(i):i[r]}}):{deleted:i.deleted,flag:i.flag,value:N(i)}),!p){let n=i.flag,r=o.find(v=>v.featureIdentifier===n&&v.featureValue===i.value);r?(C(r),r.variationIdentifier=c[n]?.identifier||""):o.push({featureIdentifier:n,featureValue:String(i.value),variationIdentifier:c[n].identifier||"",count:m?1:0,lastAccessed:Date.now()})}}else l.emit(u.ERROR,e)}catch(e){h("Feature fetch operation error: ",e),l.emit(u.ERROR,e)}},L=()=>{if(!E.streamEnabled){f("Stream is disabled by configuration. Note: Polling is not yet supported");return}b=new Q(`${E.baseUrl}/stream`,{headers:{Authorization:`Bearer ${S}`,"API-Key":a}}),b.onopen=t=>{f("Stream connected",t),l.emit(u.CONNECTED)},b.onclose=t=>{f("Stream disconnected"),l.emit(u.DISCONNECTED)},b.onerror=t=>{h("Stream has issue",t),l.emit("error",t)},b.addEventListener("*",t=>{let e=JSON.parse(t.data);switch(f("Received event from stream: ",e),e.event){case"create":setTimeout(()=>M(e.identifier),1e3);break;case"patch":M(e.identifier);break;case"delete":delete g[e.identifier],l.emit(u.CHANGED,{flag:e.identifier,value:void 0,deleted:!0}),f("Evaluation deleted",{message:e,storage:g});break}})},H=(t,e)=>l.on(t,e),K=(t,e)=>{t?l.off(t,e):x()},J=(t,e)=>{let i=g[t];if(!p&&i!==void 0){let d=i,n=t,r=o.find(v=>v.featureIdentifier===n&&v.featureValue===d);r?(C(r),r.variationIdentifier=c[n]?.identifier||""):o.push({featureIdentifier:n,featureValue:d,count:m?1:0,variationIdentifier:c[n].identifier||"",lastAccessed:Date.now()})}return i!==void 0?i:e},x=()=>{f("Closing event stream"),g=$(),c={},clearTimeout(y),l.all.clear(),b.close()};return{on:H,off:K,variation:J,close:x}};export{u as Event,W as initialize};
//# sourceMappingURL=sdk.esm.js.map
