var z=Object.create,T=Object.defineProperty,B=Object.getPrototypeOf,K=Object.prototype.hasOwnProperty,G=Object.getOwnPropertyNames,Y=Object.getOwnPropertyDescriptor;var D=a=>T(a,"__esModule",{value:!0});var q=(a,r)=>{for(var d in r)T(a,d,{get:r[d],enumerable:!0})},Q=(a,r,d)=>{if(r&&typeof r=="object"||typeof r=="function")for(let g of G(r))!K.call(a,g)&&g!=="default"&&T(a,g,{get:()=>r[g],enumerable:!(d=Y(r,g))||d.enumerable});return a},k=a=>Q(D(T(a!=null?z(B(a)):{},"default",a&&a.__esModule&&"default"in a?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a);D(exports);q(exports,{Event:()=>l,initialize:()=>X});var x=k(require("jwt-decode")),P=k(require("mitt")),j=k(require("event-source-polyfill"));var l;(function(a){a.READY="ready",a.CONNECTED="connected",a.DISCONNECTED="disconnected",a.RECONNECTED="reconnected",a.CHANGED="changed",a.ERROR="error"})(l||(l={}));var $={debug:!1,baseUrl:"https://config.feature-flags.uat.harness.io/api/1.0",eventUrl:"https://event.feature-flags.uat.harness.io/api/1.0",streamEnabled:!0,allAttributesPrivate:!1,privateAttributeNames:[]},h=(a,...r)=>console.error(`[FF-SDK] ${a}`,...r),R=30*1e3;var N=globalThis.fetch,W=j.EventSourcePolyfill,S=!!globalThis.Proxy,C=a=>{let{value:r}=a;try{switch(a.kind.toLowerCase()){case"int":case"number":r=Number(r);break;case"boolean":r=r.toLocaleString()==="true";break;case"json":r=JSON.parse(r);break}}catch(d){h(d)}return r},X=(a,r,d)=>{let g,v,E,y,i=[],s=(0,P.default)(),b={...$,...d},c=(t,...e)=>{b.debug&&console.debug(`[FF-SDK] ${t}`,...e)};globalThis.onbeforeunload=()=>{i.length&&globalThis.localStorage&&(globalThis.localStorage.HARNESS_FF_METRICS=JSON.stringify(i))};let M=async(t,e)=>(await(await N(`${e.baseUrl}/client/auth`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({apiKey:t,target:r})})).json()).authToken,O=()=>{if(i.length){c("Sending metrics...",i);let t={metricsData:i.map(e=>({timestamp:Date.now(),count:e.count,metricsType:"FFMETRICS",attributes:[{key:"featureIdentifier",value:e.featureIdentifier},{key:"featureName",value:e.featureIdentifier},{key:"featureValue",value:String(e.featureValue)},{key:"target",value:r.identifier},{key:"SDK_NAME",value:"JavaScript"},{key:"SDK_TYPE",value:"client"}]}))};N(`${d.eventUrl}/metrics/${g}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${E}`},body:JSON.stringify(t)}).then(()=>{i=[]}).catch(e=>{h(e)}).finally(()=>{y=setTimeout(O,R)})}else y=setTimeout(O,R)},I=function(){return S?new Proxy({},{get(t,e){if(t.hasOwnProperty(e)){let n=t[e],u=i.find(o=>o.featureIdentifier===e&&o.featureValue===n);u?u.count++:i.push({featureIdentifier:e,featureValue:n,count:1}),c("Metrics event: Flag",e,"has been read with value",n)}return t[e]}}):{}},f=I();M(a,b).then(t=>{E=t;let e=(0,x.default)(t);if(c("Authenticated",e),globalThis.localStorage&&globalThis.localStorage.HARNESS_FF_METRICS)try{i=JSON.parse(globalThis.localStorage.HARNESS_FF_METRICS),delete globalThis.localStorage.HARNESS_FF_METRICS,c("Picking up metrics from previous session")}catch(n){}y=setTimeout(O,R),g=e.environment,U().then(()=>{c("Fetch all flags ok",f)}).then(()=>{_()}).then(()=>{c("Event stream ready",{storage:f}),s.emit(l.READY,f),S||Object.keys(f).forEach(n=>{i.push({featureIdentifier:n,featureValue:f[n],count:1})})}).catch(n=>{s.emit(l.ERROR,n)})}).catch(t=>{h("Authentication error: ",t),s.emit(l.ERROR,t)});let U=async()=>{try{(await(await N(`${b.baseUrl}/client/env/${g}/target/${r.identifier}/evaluations`,{headers:{Authorization:`Bearer ${E}`}})).json()).forEach(n=>{f[n.flag]=C(n)})}catch(t){return h("Features fetch operation error: ",t),s.emit(l.ERROR,t),t}},V=async t=>{try{let e=await N(`${b.baseUrl}/client/env/${g}/target/${r.identifier}/evaluations/${t}`,{headers:{Authorization:`Bearer ${E}`}});if(e.ok){let n=await e.json();if(f[t]=C(n),s.emit(l.CHANGED,S?new Proxy(n,{get(u,o){if(u.hasOwnProperty(o)&&o==="value"){let m=u.flag,p=n.value,F=i.find(w=>w.featureIdentifier===m&&w.featureValue===p);F?F.count++:i.push({featureIdentifier:o,featureValue:String(p),count:1}),c("Metrics event: Flag",o,"has been read with value via stream update",p)}return o==="value"?C(n):n[o]}}):{deleted:n.deleted,flag:n.flag,value:C(n)}),!S){let u=n.flag,o=i.find(m=>m.featureIdentifier===u&&m.featureValue===n.value);o?o.count++:i.push({featureIdentifier:u,featureValue:String(n.value),count:1})}}else s.emit(l.ERROR,e)}catch(e){h("Feature fetch operation error: ",e),s.emit(l.ERROR,e)}},_=()=>{if(!b.streamEnabled){c("Stream is disabled by configuration. Note: Polling is not yet supported");return}v=new W(`${b.baseUrl}/stream`,{headers:{Authorization:`Bearer ${E}`,"API-Key":a}}),v.onopen=t=>{c("Stream connected",t),s.emit(l.CONNECTED)},v.onclose=t=>{c("Stream disconnected"),s.emit(l.DISCONNECTED)},v.onerror=t=>{h("Stream has issue",t),s.emit("error",t)},v.addEventListener("*",t=>{let e=JSON.parse(t.data);switch(c("Received event from stream: ",e),e.event){case"create":setTimeout(()=>V(e.identifier),1e3);break;case"patch":V(e.identifier);break;case"delete":delete f[e.identifier],s.emit(l.CHANGED,{flag:e.identifier,value:void 0,deleted:!0}),c("Evaluation deleted",{message:e,storage:f});break}})},H=(t,e)=>s.on(t,e),J=(t,e)=>{t?s.off(t,e):A()},L=(t,e)=>{let n=f[t];if(!S&&n!==void 0){let u=n,o=t,m=i.find(p=>p.featureIdentifier===o&&p.featureValue===u);m?m.count++:i.push({featureIdentifier:o,featureValue:u,count:1})}return n!==void 0?n:e},A=()=>{c("Closing event stream"),f=I(),clearTimeout(y),s.all.clear(),v.close()};return{on:H,off:J,variation:L,close:A}};
//# sourceMappingURL=sdk.cjs.js.map
